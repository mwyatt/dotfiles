{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"color",
				"color-rendering"
			],
			[
				"cuname",
				"customer_Name"
			],
			[
				"asse",
				"asset"
			],
			[
				"cusclien",
				"customer_Client_ID"
			],
			[
				"aerorepo",
				"aeroreportDashboard"
			],
			[
				"userAc",
				"userActionRepository"
			],
			[
				"enqui",
				"Enquiries"
			],
			[
				"findb",
				"findById"
			],
			[
				"typea",
				"typeahead"
			],
			[
				"filtersFi",
				"filtersExactFixed"
			],
			[
				"pv",
				"pv\tmw-php-printPre"
			],
			[
				"filtefixed",
				"filtersSetFixed"
			],
			[
				"conta",
				"contacts"
			],
			[
				"Coun",
				"Country"
			],
			[
				"crmcont",
				"crmContact"
			],
			[
				"pro",
				"prop"
			],
			[
				"ex",
				"extend\t$.extend()"
			],
			[
				"Conta",
				"Contacts"
			],
			[
				"cont",
				"contact"
			],
			[
				"con",
				"contact"
			],
			[
				"portle",
				"portlet-body"
			],
			[
				"li",
				"line"
			],
			[
				"js-permission-gr",
				"js-permission-group-checkbox"
			],
			[
				"js-permiss",
				"js-permission-checkbox"
			],
			[
				"addressPo",
				"addressPostcode"
			],
			[
				"contac",
				"contact"
			],
			[
				"coma",
				"company"
			],
			[
				"compa",
				"company"
			],
			[
				"company",
				"companys"
			],
			[
				"fileconl",
				"fileContentsLines"
			],
			[
				"expeccol",
				"expectedColCount"
			],
			[
				"incl",
				"incorrectLines"
			],
			[
				"expec",
				"expectedImportCols"
			],
			[
				"users",
				"users"
			],
			[
				"container",
				"departmentManagersContainer"
			],
			[
				"render",
				"renderManagersByDepartmentId"
			],
			[
				"depid",
				"depId"
			],
			[
				"choos",
				"chooseExistingContact"
			],
			[
				"compan",
				"company"
			],
			[
				"contsc",
				"contacts"
			],
			[
				"crm",
				"crmEnquiryCreate"
			],
			[
				"enq",
				"enquirys"
			],
			[
				"conrepo",
				"contactRepository"
			],
			[
				"usedepman",
				"usersNotifyAndDeptManagers"
			],
			[
				"userac",
				"userActions"
			],
			[
				"parint",
				"PARAM_INT"
			],
			[
				"Depart",
				"department"
			],
			[
				"selec",
				"selected"
			],
			[
				"req",
				"request"
			],
			[
				"sendc",
				"send_confirmation"
			],
			[
				"filse",
				"filtersSet"
			],
			[
				"depar",
				"department"
			],
			[
				"itera",
				"IteratorFactory"
			],
			[
				"mar",
				"margin"
			],
			[
				"user",
				"userAction"
			],
			[
				"usera",
				"userActions"
			],
			[
				"strip",
				"stripos"
			],
			[
				"contrposi",
				"contactRepository"
			],
			[
				"model",
				"modelClassName"
			],
			[
				"mode",
				"models"
			],
			[
				"cona",
				"contacts"
			],
			[
				"modid",
				"modelId"
			],
			[
				"statu",
				"statuss"
			],
			[
				"getstatus",
				"getStatusLead"
			],
			[
				"comp",
				"companyPhone"
			],
			[
				"usas",
				"userAssigned"
			],
			[
				"userAssig",
				"userAssigned"
			],
			[
				"depart",
				"department"
			],
			[
				"depat",
				"departmentId"
			],
			[
				"depa",
				"departments"
			],
			[
				"department",
				"department"
			],
			[
				"usermet",
				"userMeta"
			],
			[
				"cgr",
				"controller-get-repository\tmw-php-controller-get-repository"
			],
			[
				"usna",
				"userNames"
			],
			[
				"displa",
				"display_name"
			],
			[
				"enquiei",
				"enquiries"
			],
			[
				"findbid",
				"findByIds"
			],
			[
				"armer",
				"array_merge"
			],
			[
				"userme",
				"UserMeta"
			],
			[
				"viewSer",
				"viewService"
			],
			[
				"repos",
				"reportService"
			],
			[
				"deparid",
				"departmentIds"
			],
			[
				"deps",
				"departments"
			],
			[
				"depam",
				"departments"
			],
			[
				"useracre",
				"userActionMetaRepository"
			],
			[
				"getmode",
				"getModelCacheByTypeId"
			],
			[
				"logg",
				"loggedIn"
			],
			[
				"escapestrin",
				"mysql_escape_string"
			],
			[
				"logus",
				"loggedUser"
			],
			[
				"userAct",
				"userActions"
			],
			[
				"acco",
				"accordion1"
			],
			[
				"tr",
				"try\tmw-php-try"
			],
			[
				"contapho",
				"contactPhone"
			],
			[
				"reps",
				"reportService"
			],
			[
				"repository",
				"calllogRepository"
			],
			[
				"userass",
				"userAssigned"
			],
			[
				"res",
				"result"
			],
			[
				"com",
				"company"
			],
			[
				"resucol",
				"resultCols"
			],
			[
				"resu",
				"results"
			],
			[
				"fil",
				"filter"
			],
			[
				"filt",
				"filter"
			],
			[
				"userid",
				"userIds"
			],
			[
				"parfi",
				"parentFindValues"
			],
			[
				"userAss",
				"userAssignedId"
			],
			[
				"depr",
				"department"
			],
			[
				"getBy",
				"getByPropertyValues"
			],
			[
				"deptr",
				"departmentTree"
			],
			[
				"val",
				"value"
			],
			[
				"dat",
				"dataType"
			],
			[
				"chid",
				"childModels"
			],
			[
				"tho",
				"throw\tmw-php-throw"
			],
			[
				"publi",
				"publicCols"
			],
			[
				"useras",
				"userAssignedIdStored"
			],
			[
				"crmlead",
				"crmLeadRepository"
			],
			[
				"userAssign",
				"userAssignedId"
			],
			[
				"jstt",
				"js-tt-user-id"
			],
			[
				"of",
				"offsetSet"
			],
			[
				"u",
				"user"
			],
			[
				"fnidb",
				"findByIds"
			],
			[
				"compnaem",
				"companyName"
			],
			[
				"compny",
				"company"
			],
			[
				"de",
				"department"
			],
			[
				"dpar",
				"departmentIds"
			],
			[
				"comna",
				"companys"
			],
			[
				"fi",
				"filter"
			],
			[
				"fils",
				"filters"
			],
			[
				"st",
				"statuses"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "<?php\n\nnamespace Acmefg\\Bms\\Controller;\n\nclass Servicecalls extends \\Mwyatt\\Core\\AbstractController\n{\n    private $acceptedDepartmentNames = [\n        'Catering Sales',\n    ];\n\n\n    public function install(\\Mwyatt\\Core\\RequestInterface $request)\n    {\n        $basePath = $this->getService('ProjectPath');\n        $installSql = file_get_contents($basePath . 'sql/servicecalls/definition.sql');\n        $basePathDocs = \"$basePath/temp/\";\n        $databaseService = $this->getService('DatabaseServicecalls');\n        $databaseService->query($installSql);\n        $request->setSession('feedback', \"Wiped base tables then created them.\");\n        $this->redirect('dashboard');\n    }\n\n\n    public function dashboard(\\Mwyatt\\Core\\RequestInterface $request)\n    {\n        $userRepository = $this->getRepository('User');\n        $departmentRepository = $this->getRepository('Company\\Department');\n        $calllogRepository = $this->getRepository('Servicecalls\\Calllog');\n        $dateTime = new \\DateTime;\n        $timeNow = time();\n        $dateTime->setTime(0, 0);\n        $timeOneDay = 60 * 60 * 24;\n        $timeTodayStart = $dateTime->getTimestamp();\n        $dateTime->setTime(24, 0);\n        $timeTodayEnd = $dateTime->getTimestamp();\n        $dateTime->setDate($dateTime->format('Y'), $dateTime->format('m'), 1);\n        $dateTime->setTime(0, 0);\n        $timeMonthStart = $dateTime->getTimestamp();\n        $dateTime->setTimestamp($timeNow - ($timeOneDay * 7));\n        $time7DaysAgoStart = $dateTime->getTimestamp();\n        $calllog = $calllogRepository->getModel();\n        $reportService = $this->getService('Report');\n\n        $reportService->setFilters([\n            [\n                'colName' => 'companyId',\n                'inputName' => 'companyId',\n                'matchType' => 'exact',\n            ],\n            [\n                'colName' => 'contactName',\n                'inputName' => 'contactName',\n                'matchType' => 'exact',\n            ],\n            [\n                'colName' => 'typeofcall',\n                'inputName' => 'typeofcall',\n                'matchType' => 'exact',\n            ],\n            [\n                'colName' => 'timeCreated',\n                'inputName' => 'timeCreated',\n                'matchType' => 'date',\n            ],\n        ]);\n        $reportService->setFilterMapper('Servicecalls\\Calllog');\n\n        $dashboardItems = [\n            [\n                'title' => 'Today',\n                'icon' => 'call-in',\n                'bgColor' => 'blue',\n                'stat' => $reportService->setFiltersSetAndGetResultCount(['timeCreated' => [$timeTodayStart, $timeTodayEnd]]),\n            ],\n            [\n                'title' => 'All Time',\n                'icon' => 'call-in',\n                'bgColor' => 'red',\n                'stat' => $reportService->setFiltersSetAndGetResultCount(),\n            ],\n            [\n                'title' => 'Over 7 Days',\n                'icon' => 'call-in',\n                'bgColor' => 'red',\n                'stat' => $reportService->setFiltersSetAndGetResultCount(['timeCreated' => [$time7DaysAgoStart, $timeTodayEnd]]),\n            ],\n            [\n                'title' => 'This Month',\n                'icon' => 'call-in',\n                'bgColor' => 'red',\n                'stat' => $reportService->setFiltersSetAndGetResultCount(['timeCreated' => [$timeMonthStart, $timeTodayEnd]]),\n            ],\n        ];\n        foreach ($calllog->getCompanys() as $companyId => $name) {\n            $dashboardItems[] = [\n                'title' => 'Today ' . $name,\n                'icon' => 'call-in',\n                'bgColor' => 'blue',\n                'stat' => $reportService->setFiltersSetAndGetResultCount([\n                    'companyId' => $companyId,\n                    'timeCreated' => [$timeTodayStart, $timeTodayEnd],\n                ]),\n            ];\n            $dashboardItems[] = [\n                'title' => 'Today ' . $name,\n                'subtitle' => 'Cancel',\n                'icon' => 'call-in',\n                'bgColor' => 'blue',\n                'stat' => $reportService->setFiltersSetAndGetResultCount([\n                    'typeofcall' => $calllog->getTypeCancelLive(),\n                    'companyId' => $companyId,\n                    'timeCreated' => [$timeTodayStart, $timeTodayEnd],\n                ]),\n            ];\n            $dashboardItems[] = [\n                'title' => 'Today ' . $name,\n                'subtitle' => 'Chase',\n                'icon' => 'call-in',\n                'bgColor' => 'blue',\n                'stat' => $reportService->setFiltersSetAndGetResultCount([\n                    'typeofcall' => $calllog->getTypeChaseLive(),\n                    'companyId' => $companyId,\n                    'timeCreated' => [$timeTodayStart, $timeTodayEnd],\n                ]),\n            ];\n            $dashboardItems[] = [\n                'title' => 'All Time ' . $name,\n                'icon' => 'call-in',\n                'bgColor' => 'red',\n                'stat' => $reportService->setFiltersSetAndGetResultCount([\n                    'companyId' => $companyId,\n                ]),\n            ];\n        }\n        foreach ($userRepository->findManagersByDepartmentIds($departmentRepository->findByNames($this->acceptedDepartmentNames)->getIds()) as $user) {\n            $dashboardItems[] = [\n                'title' => 'Today Manager ' . $user->nameFirst,\n                'icon' => 'call-in',\n                'bgColor' => 'blue',\n                'stat' => $reportService->setFiltersSetAndGetResultCount([\n                    'typeofcall' => $calllog->getTypeManager(),\n                    'contactName' => $user->getNameFull(),\n                    'timeCreated' => [$timeTodayStart, $timeTodayEnd],\n                ]),\n            ];\n        }\n        $dashboardItems[] = [\n            'title' => 'Today Other',\n            'icon' => 'call-in',\n            'bgColor' => 'blue',\n            'stat' => $reportService->setFiltersSetAndGetResultCount([\n                'typeofcall' => $calllog->getTypeOther(),\n                'timeCreated' => [$timeTodayStart, $timeTodayEnd],\n            ]),\n        ];\n        $dashboardItems[] = [\n            'title' => 'Today Sales',\n            'icon' => 'call-in',\n            'bgColor' => 'blue',\n            'stat' => $reportService->setFiltersSetAndGetResultCount([\n                'typeofcall' => $calllog->getTypeSales(),\n                'timeCreated' => [$timeTodayStart, $timeTodayEnd],\n            ]),\n        ];\n\n        $this->view->offsetSet('pageHeadingAutoPos', true);\n        $this->view->offsetSet('pageHeading', 'Service Calls Dashboard');\n        $this->view->offsetSet('dashboardItems', $dashboardItems);\n        return $this->response($this->view->getTemplate('dashboard-shared'));\n    }\n\n\n    public function logCall(\\Mwyatt\\Core\\RequestInterface $request)\n    {\n        $companyId = $request->getQuery('company_id');\n        $hour = date('H');\n        $isAfternoon = $hour >= 12;\n        $calllogRepository = $this->getRepository('Servicecalls\\Calllog');\n        $calllog = $calllogRepository->getModel();\n        $calllog->companyId = $companyId;\n\n        if ($companyId) {\n            $template = 'servicecalls/logcall/options';\n            $request->setSession('servicecallsCurrentCompanyId', $companyId);\n        } else {\n            $template = 'servicecalls/logcall';\n            $request->pullSession('servicecallsCurrentCompanyId');\n        }\n     \n        $urlService = $this->getService('Url');\n        $breadService = $this->getService('Bread');\n        if ($companyId) {\n            $breadService->offsetAppend('Log Call', $urlService->generate('servicecallsLogCall'));\n            $breadService->offsetAppend($calllog->getCompanyText(), '#');\n        }\n        $this->view->offsetSet('breadService', $breadService);\n\n        $this->view->offsetAppend('css', 'servicecalls/common.bundle');\n        $this->view->offsetSet('isAfternoon', $isAfternoon);\n        $this->view->offsetSet('pageHeadingAutoPos', true);\n        $this->view->offsetSet('pageHeading', 'Log' . ($companyId ? ' ' . $calllog->getCompanyText() : '') . ' Call');\n        return $this->response($this->view->getTemplate($template));\n    }\n\n\n    public function logCallNormal(\\Mwyatt\\Core\\RequestInterface $request)\n    {\n        $companyId = $request->getSession('servicecallsCurrentCompanyId');\n        $calllogService = $this->getService('ServicecallsCalllog');\n        $calllogRepository = $this->getRepository('Servicecalls\\Calllog');\n        $calllog = $calllogRepository->getModel();\n\n        if (!$companyId) {\n            $request->setSession('feedback', 'Call session expired. Please start again.');\n            $this->redirect('servicecallsLogCall');\n        }\n        try {\n            $calllog = $calllogService->create($calllog->getTypeNew());\n        } catch (\\Exception $e) {\n            $request->setSession('feedback', 'Unable to log call at this time.');\n            $this->redirect('servicecallsLogCall');\n        }\n        $this->view->offsetSet('calllog', $calllog);\n        $this->view->offsetSet('companyId', $companyId);\n        $this->view->offsetAppend('css', 'servicecalls/common.bundle');\n        $this->view->offsetSet('pageHeadingAutoPos', true);\n        $this->view->offsetSet('pageHeading', 'Logged Normal Call');\n        return $this->response($this->view->getTemplate('servicecalls/logcall/normalcall'));\n    }\n\n\n    public function logCallGenericForm(\\Mwyatt\\Core\\RequestInterface $request)\n    {\n        $userRepository = $this->getRepository('User');\n        $userMetaRepository = $this->getRepository('UserMeta');\n        $companyId = $request->getSession('servicecallsCurrentCompanyId');\n        $type = $request->getUrlVar('type');\n        $calllogService = $this->getService('ServicecallsCalllog');\n        $calllogRepository = $this->getRepository('Servicecalls\\Calllog');\n        $calllog = $calllogRepository->getModel();\n        $calllog->typeofcall = $type;\n        $calllog->companyId = $companyId;\n        $typeManager = 4;\n        $typeSales = 5;\n        $usersCorrect = [];\n        $departmentRepository = $this->getRepository('Company\\Department');\n        $acceptedDepartments = $departmentRepository->findByNames($this->acceptedDepartmentNames);\n        $acceptedDepartmentIds = $acceptedDepartments->getIds();\n        $urlHistoryService = $this->getService('UrlHistory');\n\n        if (!$companyId) {\n            $request->setSession('feedback', 'Call session expired. Please start again.');\n            $this->redirect('servicecallsLogCall');\n        }\n        if ($type == $typeManager) {\n            $usersCorrect = $userRepository->findManagersByDepartmentIds($acceptedDepartmentIds);\n            if (!$usersCorrect->count()) {\n                $request->setSession('feedback', 'No managers found.');\n                $this->redirectAbs($urlHistoryService->getPrevious());\n            }\n        } elseif ($type == $typeSales) {\n            $usersCorrect = $userRepository->findEmployeesByDepartmentIds($acceptedDepartmentIds);\n            if (!$usersCorrect->count()) {\n                $request->setSession('feedback', 'No employees found.');\n                $this->redirectAbs($urlHistoryService->getPrevious());\n            }\n        }\n\n        $urlService = $this->getService('Url');\n        $breadService = $this->getService('Bread');\n        $breadService->offsetAppend('Log Call', $urlService->generate('servicecallsLogCall'));\n        $breadService->offsetAppend($calllog->getCompanyText(), $urlService->generate('servicecallsLogCall', [], ['company_id' => $calllog->companyId]));\n        $breadService->offsetAppend($calllog->getTypeText(), '#');\n        $this->view->offsetSet('breadService', $breadService);\n\n        $this->view->offsetSet('users', $usersCorrect);\n        $this->view->offsetAppend('css', 'servicecalls/common.bundle');\n        $this->view->offsetSet('calllog', $calllog);\n        $this->view->offsetSet('pageHeadingAutoPos', true);\n        $this->view->offsetSet('pageHeading', \"Log {$calllog->getTypeText()} Call\");\n        return $this->response($this->view->getTemplate('servicecalls/logcall/generic-form'));\n    }\n\n\n    public function enquiryAssets(\\Mwyatt\\Core\\RequestInterface $request)\n    {\n        $this->view->offsetSet('pageHeadingAutoPos', true);\n        $this->view->offsetSet('pageHeading', 'Find Equipment By Serial');\n        $this->view->offsetAppend('js', 'servicecalls/siclops/enquiry-assets.bundle');\n        $this->view->offsetAppend('css', 'servicecalls/common.bundle');\n        return $this->response($this->view->getTemplate('servicecalls/enquiry-assets'));\n    }\n\n\n    public function enquiryClientEquipment(\\Mwyatt\\Core\\RequestInterface $request)\n    {\n        $this->view->offsetSet('pageHeadingAutoPos', true);\n        $this->view->offsetSet('pageHeading', 'Find Client By Postcode');\n        $this->view->offsetAppend('js', 'servicecalls/siclops/enquiry-client-equipment.bundle');\n        $this->view->offsetAppend('css', 'servicecalls/common.bundle');\n        return $this->response($this->view->getTemplate('servicecalls/enquiry-client-equipment'));\n    }\n\n\n    public function managerNoaeromarkAll(\\Mwyatt\\Core\\RequestInterface $request)\n    {\n        $noAeromarkRepository = $this->getRepository('Servicecalls\\NoAeromark');\n        $isClosed = $request->getQuery('closed');\n        $urlService = $this->getService('Url');\n        $urlPath = $urlService->getPath();\n        $userService = $this->getService('User');\n        $loggedUser = $userService->getLoggedUser();\n        $noAeromark = $noAeromarkRepository->getModel();\n\n        foreach ($noAeromark->getReasons() as $id => $name) {\n            if (stripos($urlPath, $name)) {\n                $noAeromark->reason = $id;\n            }\n        }\n        if (!$noAeromark->reason) {\n            $request->setSession('feedback', 'Invalid route.');\n            $this->redirect('servicecallsDashboard');\n        }\n        $status = $isClosed ? $noAeromark->getStatusClosed() : $noAeromark->getStatusNormal();\n        $noAeromarks = $noAeromarkRepository->findByReasonStatus($noAeromark->reason, $status);\n        $noAeromarks->uasort(function ($a, $b) {\n            return $a->timeCreated < $b->timeCreated;\n        });\n        $statusText = $isClosed ? 'Closed' : 'Open';\n\n        $this->view->offsetSet('isClosed', $isClosed);\n        $this->view->offsetSet('pageHeadingAutoPos', true);\n        $this->view->offsetSet('pageHeading', \"All $statusText {$noAeromark->getReasonText()} Jobs\");\n        $this->view->offsetSet('noAeromarkFirst', $noAeromark);\n        $this->view->offsetSet('noAeromarks', $noAeromarks);\n        return $this->response($this->view->getTemplate('servicecalls/manager-no-aeromark-all'));\n    }\n\n\n    public function managerNoaeromarkSingle(\\Mwyatt\\Core\\RequestInterface $request)\n    {\n        $userService = $this->getService('User');\n        $loggedUser = $userService->getLoggedUser();\n        $close = $request->getQuery('close');\n        $id = $request->getUrlVar('id');\n        $noAeromarkRepository = $this->getRepository('Servicecalls\\NoAeromark');\n        $noAeromark = $noAeromarkRepository->findById($id);\n        $urlHistoryService = $this->getService('UrlHistory');\n        $userPermissionService = $this->getService('UserPermission');\n        $breadService = $this->getService('Bread');\n        $urlService = $this->getService('Url');\n\n        if (!$noAeromark || !$userPermissionService->hasPermission($loggedUser, 'servicecallsManagerNoaeromarkAll.' . strtolower($noAeromark->getReasonText()))) {\n            $request->setSession('feedback', \"You do not have permission to access this aeromark job.\");\n            $this->redirectAbs($urlHistoryService->getPrevious());\n        }\n        if ($close) {\n            $noAeromark->status = $noAeromark->getStatusClosed();\n            try {\n                $success = $noAeromarkRepository->persist($noAeromark);\n                $request->setSession('feedback', \"Successfully closed job {$noAeromark->id}.\");\n            } catch (\\Exception $e) {\n                $request->setSession('feedback', \"Problem closing job {$noAeromark->id}.\");\n            }\n            $this->redirectAbs($urlHistoryService->getPrevious());\n        }\n\n        $breadService->offsetAppend(\"{$noAeromark->getReasonText()} Jobs\", $urlService->generate('servicecallsManagerNoaeromarkAll.' . strtolower($noAeromark->getReasonText())));\n        $breadService->offsetAppend(\"Job {$noAeromark->id}\", '#');\n\n        $this->view->offsetSet('breadService', $breadService);\n        $this->view->offsetSet('isManagerView', 1);\n        $this->view->offsetSet('pageHeadingAutoPos', true);\n        $this->view->offsetSet('pageHeading', \"Job {$noAeromark->id}\");\n        $this->view->offsetSet('noAeromark', $noAeromark);\n        return $this->response($this->view->getTemplate('servicecalls/form-no-aeromark'));\n    }\n\n\n    public function noAeromark(\\Mwyatt\\Core\\RequestInterface $request)\n    {\n    $noAeromarkRepository = $this->getRepository('Servicecalls\\NoAeromark');\n        $noAeromark = $noAeromarkRepository->getModel();\n\t$calllogId = $request->getQuery('calllog_id');\n\n        $this->view->offsetSet('pageHeadingAutoPos', true);\n        $this->view->offsetSet('calllog_id', $calllogId);\n        $this->view->offsetSet('pageHeading', 'Log Call No Aeromark');\n        $this->view->offsetSet('noAeromark', $noAeromark);\n        $this->view->offsetSet('isManagerView', 0);\n        $this->view->offsetAppend('js', 'servicecalls/log-call/no-aeromark.bundle'); \n        return $this->response($this->view->getTemplate('servicecalls/form-no-aeromark'));\n    }\n\n\n    public function noAeromarkSubmit(\\Mwyatt\\Core\\RequestInterface $request)\n    {\n        $userService = $this->getService('User');\n        $loggedUser = $userService->getLoggedUser();\n        $noAeromarkRepository = $this->getRepository('Servicecalls\\NoAeromark');\n        $noAeromark = $noAeromarkRepository->getModel();\n        $databaseService = $this->getService('DatabaseServicecalls');\n        $noAeromarkRepository = $this->getRepository('Servicecalls\\NoAeromark');\n        $mailService = $this->getService('Mail');\n        $userRepository = $this->getRepository('User');\n        $userMetaRepository = $this->getRepository('UserMeta');\n\n        foreach ($noAeromarkRepository->getPublicColNames() as $col) {\n            $noAeromark->$col = $request->getPost($col);\n        }\n        $noAeromark->userId = $loggedUser->id;\n        $noAeromark->status = $noAeromark->getStatusNormal();\n        $this->view->offsetSet('noAeromark', $noAeromark);\n\n        $databaseService->beginTransaction();\n        try {\n            $noAeromarkRepository->persist($noAeromark);\n            $jobPersisted = $noAeromark->id;\n            if (!$jobPersisted) {\n                throw new \\Exception('');\n            }\n            $request->setSession('feedback', 'Successfully logged report.');\n            $databaseService->commit();\n            $redirection = 'servicecallsLogCall';\n        } catch (\\Exception $e) {\n            $databaseService->rollback();\n            $request->setSession('feedback', 'Error while saving report.');\n            $redirection = 'servicecallsLogCallNoAeromark';\n        }\n        if (!empty($jobPersisted)) {\n            try {\n                $userPermissions = $userMetaRepository->findByKeyValues('permission', ['servicecallsManagerNoaeromarkAll.' . strtolower($noAeromark->getReasonText())]);\n                $userIds = $userPermissions->extractPropertyUnique('userId');\n                $usersInterested = $userRepository->findByIds($userIds);\n                foreach ($usersInterested as $user) {\n                    $message = $mailService->getNewMessage();\n                    $message->setTo($user->email);\n                    $message->setFrom('servicecalls@acmefg.com');\n                    $message->setSubject(\"{$noAeromark->getReasonText()} Job not logged to Aeromark\");\n                    $this->view->offsetSet('user', $user);\n                    $message->addPart($this->view->getTemplate('servicecalls/mail/no-aeromark'), 'text/html');\n                    $mailService->send($message);\n                }\n            } catch (\\Exception $e) {\n            }\n        }\n        $this->redirect($redirection);\n    }\n\n\n    public function logCallGenericFormSubmit(\\Mwyatt\\Core\\RequestInterface $request)\n    {\n        $calllogService = $this->getService('ServicecallsCalllog');\n        $jobName = $request->getPost('jobName', $request->getQuery('jobName'));\n        $calllogType = $request->getPost('calllogType', $request->getQuery('calllogType'));\n        $jobDescription = $request->getPost('jobDescription', $request->getQuery('jobDescription'));\n        $contactName = $request->getPost('contactName', $request->getQuery('contactName'));\n        $contactEmail = $request->getPost('contactEmail', $request->getQuery('contactEmail'));\n        $contactPhone = $request->getPost('contactPhone', $request->getQuery('contactPhone'));\n        $userService = $this->getService('User');\n        $loggedUser = $userService->getLoggedUser();\n        $databaseService = $this->getService('DatabaseServicecalls');\n        $mailService = $this->getService('Mail');\n        $urlHistoryService = $this->getService('UrlHistory');\n\n        $databaseService->beginTransaction();\n        try {\n            $calllog = $calllogService->create(\n                $calllogType,\n                $jobName,\n                $jobDescription,\n                $contactName,\n                $contactEmail,\n                $contactPhone\n            );\n            $request->setSession('feedback', 'Call logged successfully.');\n            $databaseService->commit();\n        } catch (\\Exception $e) {\n            $databaseService->rollback();\n            $request->setSession('feedback', 'Unable to log call.');\n            $this->redirectAbs($urlHistoryService->getPrevious());\n        }\n\n        // chase means email someone\n        if ($calllog->typeofcall == $calllog->getTypeChaseLive()) {\n            try {\n                $message = $mailService->getNewMessage();\n                $message->setTo('controllers@acmefg.com');\n                $message->setFrom('servicecalls@acmefg.com');\n                $message->setSubject(\"Live Call Being Chased\");\n                $this->view->offsetSet('loggedInUserObj', $loggedUser);\n                $this->view->offsetSet('calllog', $calllog);\n                $message->addPart($this->view->getTemplate('mail/call-chase-controllers'), 'text/html');\n                $mailService->send($message);\n            } catch (\\Exception $e) {\n            }\n        }\n        $this->redirect('servicecallsLogCall');\n    }\n\n\n    public function callLogReport(\\Mwyatt\\Core\\RequestInterface $request)\n    {\n        $calllogRepository = $this->getRepository('Servicecalls\\Calllog');\n        $calllogSingle = $calllogRepository->getModel();\n        $userRepository = $this->getRepository('User');\n        $reportService = $this->getService('Report');\n        $usersModel = $userRepository->findAll();\n        $companys = $calllogSingle->getCompanys();\n        $types = $calllogSingle->getTypes();\n        $users = [];\n\n        foreach ($usersModel as $user) {\n            $users[$user->id] = $user->getNameFull();\n        }\n        $reportService->enableExportOptions();\n        $reportService->setFilters([\n            [\n                'title' => 'Company',\n                'colName' => 'companyId',\n                'inputName' => 'company',\n                'inputType' => 'select',\n                'matchType' => 'exact',\n                'inputSelectOpts' => $companys,\n            ],\n            [\n                'title' => 'Type',\n                'colName' => 'typeofcall',\n                'inputName' => 'type',\n                'inputType' => 'select',\n                'matchType' => 'exact',\n                'inputSelectOpts' => $types,\n            ],\n            [\n                'title' => 'User',\n                'colName' => 'userId',\n                'inputName' => 'user',\n                'inputType' => 'select',\n                'matchType' => 'exact',\n                'inputSelectOpts' => $users,\n            ],\n            [\n                'title' => 'Contact Name',\n                'colName' => 'contactName',\n                'inputName' => 'contactName',\n                'inputType' => 'text',\n                'matchType' => 'like',\n            ],\n            [\n                'title' => 'Contact Email',\n                'colName' => 'contactEmail',\n                'inputName' => 'contactEmail',\n                'inputType' => 'text',\n                'matchType' => 'like',\n            ],\n            [\n                'title' => 'Contact Phone',\n                'colName' => 'contactPhone',\n                'inputName' => 'contactPhone',\n                'inputType' => 'text',\n                'matchType' => 'like',\n            ],\n            [\n                'title' => 'Description',\n                'colName' => 'description',\n                'inputName' => 'description',\n                'inputType' => 'text',\n                'matchType' => 'like',\n            ],\n            [\n                'title' => 'Date From To',\n                'colName' => 'timeCreated',\n                'inputName' => 'timeCreated',\n                'inputType' => 'date',\n                'inputDateStyle' => 'between',\n                'matchType' => 'date',\n            ],\n        ]);\n        $reportService->setResultCols([\n            [\n                'title' => 'Company',\n                'colName' => 'companyId',\n                'template' => 'filter/result/cell/servicecalls/company-text',\n            ],\n            [\n                'title' => 'Type',\n                'colName' => 'typeofcall',\n                'template' => 'filter/result/cell/servicecalls/type-text',\n            ],\n            [\n                'title' => 'User',\n                'colName' => 'userId',\n                'template' => 'filter/result/cell/user',\n            ],\n            [\n                'title' => 'Contact Name',\n                'colName' => 'contactName',\n            ],\n            [\n                'title' => 'Contact Email',\n                'colName' => 'contactEmail',\n            ],\n            [\n                'title' => 'Contact Phone',\n                'colName' => 'contactPhone',\n            ],\n            [\n                'title' => 'Description',\n                'colName' => 'description',\n            ],\n            [\n                'title' => 'Date Created',\n                'colName' => 'timeCreated',\n                'template' => 'filter/result/cell/date',\n            ],\n        ]);\n        $reportService->setFilterMapper('Servicecalls\\Calllog');\n        $results = $reportService->getResults();\n        $calllogRepository->bindUser($results);\n        $response = $this->response();\n\n        if ($reportService->isExporting()) {\n            $response = $reportService->convertResultsToExportResponse(\n                $results,\n                $response\n            );\n        } else {\n            $this->view->offsetAppend('css', 'servicecalls/common.bundle');\n            $this->view->offsetSet('pageHeadingAutoPos', true);\n            $this->view->offsetSet('pageHeading', 'Call Log Report');\n            $this->view->offsetSet('urlRouteIdBase', 'servicecallsCallLogReport');\n            $response->setContent($this->view->getTemplate('servicecalls/report-single'));\n        }\n        return $response;\n    }\n}\n",
			"file": "/var/www/html/bms/src/Controller/Servicecalls.php",
			"file_size": 27570,
			"file_write_time": 131369936596990612,
			"settings":
			{
				"buffer_size": 27566,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "<?php include($template->getTemplate('head')) ?>\n<?php if (!$loggedUser->nameFirst || !$loggedUser->nameLast) : ?>\n    \n<div class=\"alert alert-info\">\n    <h4 class=\"alert-heading\">Your Name</h4>\n    <p>Currently you are appearing as '<?php echo $loggedUser->getNameFull() ?>'. Why not add your full name to your profile?</p>\n    <div class=\"margin-top-10\">\n        <a href=\"<?php echo $url->generate('userProfile') ?>\" class=\"btn btn-default\">My Profile</a>\n    </div>\n</div>\n<p>Curre\n<?php endif ?>\n<?php $colLimit = 4 ?>\n<?php include($template->getTemplate('dashboard/items')) ?>\n<?php include($template->getTemplate('foot')) ?>\n",
			"file": "/var/www/html/bms/template/dashboard.php",
			"file_size": 625,
			"file_write_time": 131370027503947634,
			"settings":
			{
				"buffer_size": 633,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "@import 'settings';\n@import 'settingsEase';\n@import 'mwyatt-codex';\n@import 'mwyatt-codex/link';\n@import 'form';\n@import 'alert';\n@import 'button';\n@import 'flexboxgrid';\n\n.mr05 {\n  margin-right: .5em;\n}\n\n.floating-centered {\n    margin: 0 auto;\n    max-width: 350px;\n    margin-top: 100px;\n    padding: 30px;\n    border: 1px solid #ccc;\n    border-radius: 2px;\n    background-color: #fff;\n    box-shadow: 0 0 10px rgba(0, 0, 0, .1);\n}\n\n.login-body {\n    background-color: #f1f1f1;\n}\n\n.login-title {\n    font-size: 24px;\n    margin-bottom: 1em;\n}\n\n.acme-logo {\n    width: 130px;\n    height: 59px;\n}\n\n.login-logo {\n    margin-bottom: 25px;\n    border-bottom: 1px dashed #ccc;\n    padding-bottom: 30px;\n}\n\n.login-logo-text {\n    font-weight: 100;\n    font-size: 26px;\n    float: right;\n    margin-top: 31px;\n    color: #a9a9a9;\n}\n\n.link.grayed {\n    color: #a9a9a9;\n    border-color: #a9a9a9;\n}\n",
			"file": "/var/www/html/bms/ui/login.bundle.css",
			"file_size": 893,
			"file_write_time": 131370027655587629,
			"settings":
			{
				"buffer_size": 893,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "stat",
		"selected_items":
		[
			[
				"stat",
				"View: Toggle Status Bar"
			],
			[
				"menu",
				"View: Toggle Menu"
			],
			[
				"ena",
				"Package Control: Enable Package"
			],
			[
				"dis",
				"Package Control: Disable Package"
			],
			[
				"disa",
				"Package Control: Disable Package"
			],
			[
				"sett",
				"Preferences: Settings"
			],
			[
				"lsitpa",
				"Package Control: List Packages"
			],
			[
				"resoure",
				"PackageResourceViewer: Open Resource"
			],
			[
				"listpa",
				"Package Control: List Packages"
			],
			[
				"satusb",
				"View: Toggle Status Bar"
			],
			[
				"packaresou",
				"PackageResourceViewer: Open Resource"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"Snippet: ",
				"Snippet: scss-extend"
			],
			[
				"sta",
				"View: Toggle Status Bar"
			],
			[
				"enable",
				"Package Control: Enable Package"
			],
			[
				"rmeovpa",
				"Package Control: Remove Package"
			],
			[
				"enab",
				"Package Control: Enable Package"
			],
			[
				"removepa",
				"Package Control: Remove Package"
			],
			[
				"lsit",
				"Package Control: List Packages"
			],
			[
				"padisable",
				"Package Control: Disable Package"
			],
			[
				"disable",
				"Package Control: Disable Package"
			],
			[
				"listpack",
				"Package Control: List Packages"
			],
			[
				"tab",
				"View: Toggle Tabs"
			],
			[
				"setting",
				"Preferences: Settings"
			],
			[
				"close",
				"File: Close All"
			],
			[
				"materialac",
				"Material Theme: Activate theme"
			],
			[
				"statu",
				"View: Toggle Status Bar"
			],
			[
				"clsoe",
				"File: Close All"
			],
			[
				"sav",
				"File: Save All"
			],
			[
				"clos",
				"File: Close All"
			],
			[
				"men",
				"View: Toggle Menu"
			],
			[
				"key",
				"Preferences: Key Bindings"
			],
			[
				"snippet crea",
				"Snippet: Create getter and setter methods"
			],
			[
				"save",
				"File: Save All"
			],
			[
				"keybin",
				"Preferences: Key Bindings"
			],
			[
				"",
				"About"
			],
			[
				"clo",
				"File: Close All"
			],
			[
				"closs",
				"Package Control: List Packages"
			],
			[
				"me",
				"View: Toggle Menu"
			],
			[
				"tabs",
				"View: Toggle Tabs"
			],
			[
				"user",
				"Preferences: Package Control Settings – User"
			],
			[
				"settings",
				"Preferences: Settings"
			],
			[
				"keyb",
				"Preferences: Key Bindings"
			],
			[
				"cloe",
				"File: Close All"
			],
			[
				"sa",
				"File: Save All"
			],
			[
				"php",
				"Set Syntax: PHP"
			],
			[
				"htm",
				"Set Syntax: HTML"
			],
			[
				"sal",
				"File: Save All"
			],
			[
				"closeal",
				"File: Close All"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"closeall",
				"File: Close All"
			],
			[
				"closea",
				"File: Close All"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"list",
				"Package Control: List Packages"
			]
		],
		"width": 449.0
	},
	"console":
	{
		"height": 139.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": true,
		"show_open_files": false,
		"show_tabs": true,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/var/www/html/bms"
	],
	"file_history":
	[
		"/var/www/html/bms/ui/login.bundle.css",
		"/home/martin/.config/sublime-text-3/Packages/User/css-..sublime-snippet",
		"/home/martin/.config/sublime-text-3/Packages/Emmet/Default (Linux).sublime-keymap",
		"/home/martin/.config/sublime-text-3/Packages/Color Scheme - Default/Solarized (Light).tmTheme",
		"/var/www/html/bms/index.php",
		"/var/www/html/bms/src/Controller/Aeroreport.php",
		"/var/www/html/bms/src/Mapper/Aeroreport/Request.php",
		"/var/www/html/bms/src/Service/MenuBuilder.php",
		"/var/www/html/bms/src/Service/UserPermission.php",
		"/var/www/html/bms/src/Mapper/Aeroreport/Customer.php",
		"/var/www/html/bms/routes/aeroreport.php",
		"/var/www/html/bms/src/Mapper/Aeroreport/Cutomer.php",
		"/var/www/html/bms/src/Controller/Navreport.php",
		"/var/www/html/bms/routes/navreport.php",
		"/var/www/html/bms/template/head/content.php",
		"/var/www/html/bms/routes.php",
		"/var/www/html/bms/src/Mapper/Aeroreport/Stock.php",
		"/var/www/html/bms/src/Service/Report.php",
		"/var/www/html/bms/config.php",
		"/var/www/html/bms/src/Controller/Admin/User.php",
		"/var/www/html/bms/routes/crm.php",
		"/var/www/html/bms/routes/crm/contact.php",
		"/var/www/html/bms/src/Controller/Crm/Contact.php",
		"/var/www/html/bms/src/Controller/Crm/Company.php",
		"/var/www/html/bms/src/Controller/Crm.php",
		"/var/www/html/bms/src/Controller/Crm/Task/Ajax.php",
		"/var/www/html/bms/routes/crm/lead.php",
		"/var/www/html/bms/src/Service/UserAction.php",
		"/var/www/html/bms/src/Mapper/Crm/Company.php",
		"/var/www/html/bms/routes/install.php",
		"/var/www/html/bms/routes/admin.php",
		"/var/www/html/bms/src/Repository/UserAction.php",
		"/var/www/html/bms/src/Controller/User.php",
		"/var/www/html/bms/src/Mapper/UserAction.php",
		"/var/www/html/bms/src/Service/Appraisal/AppStatus.php",
		"/var/www/html/bms/src/Controller.php",
		"/var/www/html/bms/template/appraisal/dashboard.php",
		"/var/www/html/bms/src/Controller/Appraisal.php",
		"/var/www/html/bms/src/Middleware/UserPermission.php",
		"/var/www/html/bms/src/Repository/UserMeta.php",
		"/var/www/html/bms/src/Middleware/Auth.php",
		"/var/www/html/bms/src/Middleware/AuthTesting.php",
		"/var/www/html/bms/vendor/mwyatt/core/src/Http/Kernel.php",
		"/var/www/html/bms/src/Controller/Admin.php",
		"/var/www/html/bms/src/Middleware/Common.php",
		"/var/www/html/bms/src/Controller/Error.php",
		"/var/www/html/bms/config-remote.php",
		"/var/www/html/bms/src/Controller/Servicecalls.php",
		"/var/www/html/bms/sql/appraisal/definition.sql",
		"/var/www/html/bms/sql/servicecall/definition.sql",
		"/var/www/html/bms/sql/servicecalls/definition.sql",
		"/var/www/html/bms/src/Mapper/Appraisal/AppStatus.php",
		"/var/www/html/bms/src/AbstractMapperAppraisal.php",
		"/var/www/html/bms/src/Model/User.php",
		"/var/www/html/bms/.gitignore",
		"/var/www/html/bms/json/countries.json",
		"/var/www/html/bms/package.json",
		"/var/www/html/bms/gulpfile.js",
		"/var/www/html/bms/template/dashboard-shared.php",
		"/var/www/html/bms/template/dashboard.php",
		"/var/www/html/bms/services.php",
		"/var/www/html/bms/routes/appraisal.php",
		"/var/www/html/bms/src/Repository/Crm/Contact.php",
		"/var/www/html/bms/src/Repository/Crm/Enquiry.php",
		"/var/www/html/bms/src/Mapper/Crm/Lead.php",
		"/var/www/html/bms/src/Mapper/Crm/Enquiry.php",
		"/var/www/html/bms/routes/crm/enquiry.php",
		"/var/www/html/bms/src/Controller/Crm/Enquiry.php",
		"/var/www/html/bms/template/crm/enquiry.php",
		"/var/www/html/bms/template/crm/company.php",
		"/var/www/html/bms/ui/crm/enquiry/create.bundle.js",
		"/var/www/html/bms/src/Model/Crm/Enquiry.php",
		"/var/www/html/bms/template/crm/contact/edit.php",
		"/var/www/html/bms/template/crm/company/edit.php",
		"/var/www/html/bms/template/crm/enquiry/create.php",
		"/var/www/html/bms/template/crm/contact/create-enquiry.php",
		"/var/www/html/bms/template/crm/contact.php",
		"/var/www/html/bms/ui/crm/common.bundle.js",
		"/var/www/html/bms/ui/crm/typeahead-input.js",
		"/var/www/html/bms/template/crm/notes-panel.php",
		"/var/www/html/bms/src/Repository/Crm/Company.php",
		"/var/www/html/bms/src/Mapper/Crm/Contact.php",
		"/var/www/html/bms/sql/crm/definition.sql",
		"/var/www/html/bms/routes/crm/company.php",
		"/var/www/html/bms/src/Model/Crm/ArchivedTrait.php",
		"/var/www/html/bms/src/Model/Crm/Company.php",
		"/var/www/html/bms/src/Model/Crm/Contact.php",
		"/var/www/html/bms/src/AbstractMapper.php",
		"/var/www/html/bms/src/Controller/Crm/Lead.php",
		"/var/www/html/bms/src/Repository/Company.php",
		"/var/www/html/bms/src/Model/Crm/StatusTrait.php",
		"/var/www/html/bms/template/crm/address-portlet.php",
		"/var/www/html/bms/template/crm/edit/status.php",
		"/var/www/html/bms/ui/crm/typeahead-country.js",
		"/var/www/html/bms/ui/crm/typeahead-user.js",
		"/var/www/html/bms/ui/crm/typeahead-company.js",
		"/var/www/html/bms/ui/fix-bootstrap.bundle.css",
		"/var/www/html/bms/template/crm/lead/create.php",
		"/var/www/html/bms/template/crm/edit.php",
		"/var/www/html/bms/template/crm/edit/phone.php",
		"/var/www/html/bms/template/admin/user.php",
		"/var/www/html/bms/template/crm/edit/address.php",
		"/var/www/html/bms/vendor/mwyatt/core/src/AbstractRepository.php",
		"/var/www/html/bms/template/crm/import-contact-company-csv.php",
		"/var/www/html/bms/src/Model/Crm/AddressTrait.php",
		"/var/www/html/bms/metronic/assets/global/plugins/typeahead/typeahead.bundle.min.js",
		"/var/www/html/bms/ui/common.bundle.js",
		"/var/www/html/bms/template/crm/timeline-panel.php",
		"/var/www/html/bms/src/Service/Crm.php",
		"/var/www/html/bms/template/crm/task.php",
		"/var/www/html/bms/template/crm/task/create.php",
		"/var/www/html/bms/src/Service/User.php",
		"/var/www/html/bms/template/user.php",
		"/var/www/html/bms/ui/admin/user/single.bundle.js",
		"/var/www/html/bms/ui/crm/lead/convert/typeahead.js",
		"/var/www/html/bms/template/crm/lead/convert.php",
		"/home/martin/Downloads/170410 CRM Data Example v001.csv",
		"/var/www/html/bms/src/Repository/Crm/Task.php",
		"/var/www/html/bms/src/Controller/Crm/Contact/Ajax.php",
		"/var/www/html/bms/src/Repository/BindTaskTrait.php",
		"/var/www/html/bms/vendor/mwyatt/core/src/Iterator/Model.php",
		"/var/www/html/bms/src/Mapper/Crm/LeadTask.php",
		"/var/www/html/bms/src/Mapper/Crm/AbstractAssocTask.php",
		"/var/www/html/bms/src/Repository/BindNoteTrait.php",
		"/var/www/html/bms/src/Model/Crm/Task.php",
		"/var/www/html/bms/src/Iterator/Model/Crm/Task.php",
		"/var/www/html/bms/src/Repository/Crm/Lead.php",
		"/var/www/html/bms/src/Model/Crm/Lead.php"
	],
	"find":
	{
		"height": 39.0
	},
	"find_in_files":
	{
		"height": 158.0,
		"where_history":
		[
			"-node_modules/, -asset/, -vendor/,  -cache/",
			"-node_modules/, -asset/, -vendor/, -metronic/, -cache/",
			"-node_modules/, -asset/, -vendor/, -metronic/",
			"-node_modules/, -asset/, -vendor/, ",
			"-node_modules/, -asset/, -vendor/, src/Mapper/Appraisal/",
			"-node_modules/, -asset/, -vendor/, ",
			"-node_modules/, -asset/, -vendor/, test/",
			"-node_modules/, -asset/, -vendor/",
			"-node_modules/, -asset/, vendor/",
			"-node_modules/, -asset/, -vendor/",
			"-node_modules/, -asset/, -vendor/, home.scss",
			"-node_modules/, -asset/, -vendor/",
			"-node_modules/, -asset/, -vendor/, sass/",
			"-node_modules/, -asset/, -vendor/",
			"-node_modules/, -asset/, -vendor/, sass/",
			"-node_modules/, -asset/, -vendor/",
			"-node_modules/, -asset/, -vendor/, js/",
			"-node_modules/, -asset/, -vendor/, *.tpl",
			"-node_modules/, -asset/, -vendor/, ",
			"-node_modules/, -asset/, -vendor/, *.tpl",
			"-node_modules/, -asset/, -vendor/,",
			"-node_modules/, -asset/, -vendor/, js/",
			"-node_modules/, -asset/, -vendor/",
			"-node_modules/, -asset/, -vendor/, *.tpl",
			"-node_modules/, -asset/, -vendor/, ",
			"-node_modules/, -asset/, -vendor/, *.tpl",
			"-node_modules/, -asset/, -vendor/",
			"-node_modules/, -asset/, ",
			"-node_modules/, -asset/, js/, -vendor/",
			"-node_modules/, -asset/, js/",
			"-node_modules/, -asset/, ",
			"-node_modules/, -asset/, js/",
			"-node_modules/, -asset/",
			"-node_modules/, -asset/, sass/",
			"-node_modules/, -asset/,",
			"-node_modules/, -asset/, ",
			"-node_modules/, -asset/, sass/",
			"-node_modules/, -asset/, sass",
			"-node_modules/, -asset/, js/",
			"-node_modules/, -asset/, sass/",
			"-node_modules/, -asset/, -vendor/, sass/",
			"-node_modules/, -asset/, -vendor/, sass/admin/",
			"-node_modules/, -asset/, -vendor/, sass/",
			"-node_modules/, -asset/, -vendor/",
			"-node_modules/, -asset/, ",
			"-node_modules/, -asset/, js/",
			"-node_modules/, -asset/, ",
			"-node_modules/, -asset/, js/",
			"-node_modules/, -asset/",
			"-node_modules/, -asset/, -vendor/",
			"-node_modules/, -asset/, -vendor/, js/",
			"-node_modules/, -asset/, -vendor/, js/, ",
			"-node_modules/, -asset/, -vendor/, js/, -administration/",
			"-node_modules/, -asset/, -vendor/, js/",
			"-node_modules/, -asset/, -vendor/,",
			"-node_modules/, -asset/, -vendor/, js/admin/",
			"-node_modules/, -asset/, -vendor/, js/",
			"-node_modules/, -asset/, -vendor/",
			"-node_modules/, -asset/",
			"-node_modules/",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"gra",
			"maintCallsOutstanding",
			"aeroreportMaintCallsOutstanding",
			"aeroreportLiveCalls",
			"sqlSelect",
			"LiveCalls",
			"condition_Name",
			"product_Model_Name",
			"product_Make_Name",
			"asset_Serial",
			"customer_Name",
			"client",
			"customer_Code",
			"asset_Product_ID",
			" AND",
			", ",
			"customer_Client_ID",
			"refrigerant_Name",
			", ",
			"stock",
			"product_Supplier_Code",
			"stockReference",
			"aeroreport",
			"menuPrimary",
			"aeroreport",
			"aeroreportDashboard",
			"aeroreportLiveCalls",
			"navreportDashboard",
			"Aeroreport",
			"aeroreport",
			"LiveCalls",
			"aeroreportLiveCalls",
			"colName",
			"product_Name",
			"stock_Location_ID",
			"stock_Quantity",
			"Description",
			"stock_Location_ID",
			"', '",
			"title",
			"product_Name",
			"product_Supplier_Code",
			"product_Name",
			"stockReference",
			"product_Supplier_Code",
			"customer_Name",
			"customername",
			"stockReference",
			"Request",
			"| st",
			"databaseAeroreportService",
			"userActionService",
			"companyId",
			"ntact",
			"crmCompanyCreate",
			"company",
			"ntact",
			"crmCompanyCreate",
			"userActionService",
			"profileEdit",
			"lead",
			"user",
			"adminUserEdit",
			"adminImpersonate",
			"userAction",
			"getUserLink",
			"register",
			"adminUserEdit",
			"loggedUser",
			"userId",
			"adminUserEdit",
			"userActionService",
			"UserAction",
			"crmLeadCreate",
			"adminUserEdit",
			"crmLeadCreate",
			"\n        ",
			"adminUserSubmit",
			"password",
			"forgotPasswordRequest",
			"passwordChange",
			"user",
			"userActionService",
			"user",
			"userActionService",
			"user",
			"forgotPasswordRequest",
			"passwordChange",
			"loggedOut",
			"forgotPasswordRequest",
			"loggedUser",
			"userService",
			"loggedUser",
			"$userActionService->create",
			"profileEdit",
			"Your ",
			"getAppraisalMonth",
			"isTimeForAppraisal",
			"userId",
			"permissionRouteGroups",
			"userMeta",
			"123qweasdzxc",
			"bmsacmefg",
			"acme_admin",
			"bmsacmefg",
			"bmsacmef_aeroreport",
			"css_acme",
			"servicecalls_calllog",
			"servicecalls_noAeromark",
			"`;\n",
			"CREATE TABLE IF NOT EXISTS",
			"CREATE TABLE IF NOT EXISTS ",
			"DatabaseAppraisal",
			"crm",
			"getPrimaryStructure",
			"menuPrimar",
			"menuBui",
			"$this->redirect();",
			"AuthTesting",
			"$this->redirect()",
			"databaseService",
			"drop table",
			"if exists ",
			"if exists",
			"database",
			"minify",
			".css",
			"autoprefixer"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": true,
		"regex": false,
		"replace_history":
		[
			"$this->redirect('dashboard');",
			"$this->view->getTemplate('dashboard-shared')",
			"crmContactArchive",
			"crmEnquiryCreateNotify",
			"$this->view->offsetSet('pageHeadingAutoPos', true);\n$this->view->offsetSet('pageHeading'",
			"ms\\Model\\Crm\\StatusTrait",
			"bindOneToOneById",
			"crmCompanys",
			"sitory('Company\\Department",
			"findEmployeesByDepartmentIds",
			"findManagersByDepartmentIds",
			"generate('adminUser'",
			"getTotalFromTimeCreatedBetween",
			"servicecallsCallLogReport",
			"servicecallsManagerNoaeromarkAll",
			"servicecallsLogCall",
			"servicecallsDashboard",
			"namespace Acmefg\\Bms\\Repository\\Servicecalls;",
			"namespace Acmefg\\Bms\\Mapper\\Servicecalls;",
			"namespace Acmefg\\Bms\\Model\\Servicecalls;",
			"getMapper('Appraisal\\Questions",
			"getMapper('Appraisal\\AgreedObjective",
			"getMapper('Appraisal\\AppStatus",
			"getMapper('Appraisal\\MailLog",
			"extends \\Acmefg\\Bms\\AbstractMapperAppraisal",
			"namespace Acmefg\\Bms\\Model\\Appraisal;",
			"namespace Acmefg\\Bms\\Mapper\\Appraisal;",
			"namespace Acmefg\\Bms\\Repository\\Appraisal;",
			"namespace Acmefg\\Bms\\Appraisal\\Repository",
			"<?php echo $url->",
			"\\Bms",
			"assets/",
			"source",
			"pageTitle",
			"namespace Acmefg\\Crm",
			"$this->getModelClassAbs()",
			"\\Mwyatt\\Core\\Iterator\\Model $",
			"protected $publicCols",
			"Created",
			"public function updateById(",
			"ENGINE=InnoDB",
			"throw new \\Mwyatt\\Core\\DatabaseException;",
			"",
			"$this->getTableNameLazy()",
			"extends \\Mwyatt\\Core\\AbstractFactory",
			"Iterator\\Model",
			"AbstractMapper",
			"AbstractService",
			"require('mwyatt-grid')",
			"templateSingle: require('feedbackQueueSingleMst')",
			"templateContainer: require('feedbackQueueContainerMst')",
			"orderId",
			"require('mwyatt-codex/",
			"require('mwyatt-dialogue'",
			"return false; // should not run, return needed to be removed",
			"require('./vendor/jqGrid');",
			"require('./vendor/grid.locale-en');",
			"'./user",
			"'../feedbackStream",
			"'./feedbackStream",
			"'../feedbackStream",
			"require('./utility/url')",
			"require('./buttonToTop'",
			"require('./smoothScroll')",
			"mustache",
			"require('./config')",
			"require('./finance')",
			"require('./equalHeight')",
			"require('/equalHeight')",
			"require('admin/vendor/grid.locale-en');",
			"require('vendor/grid.locale-en');",
			"owl-carousel-2/owl.carousel",
			"owl-carousel-2",
			"jquery-scrolltofixed",
			"vendor/jquery.hoverIntent",
			"jquery.hoverIntent",
			"braintree-web",
			"require('jquery-ui')"
		],
		"reverse": true,
		"show_context": false,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "/var/www/html/bms/src/Controller/Servicecalls.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 27566,
						"regions":
						{
						},
						"selection":
						[
							[
								1677,
								1677
							]
						],
						"settings":
						{
							"rulers":
							[
								80
							],
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"tab_size": 4
						},
						"translation.x": 0.0,
						"translation.y": 575.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "/var/www/html/bms/template/dashboard.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 633,
						"regions":
						{
						},
						"selection":
						[
							[
								485,
								485
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "/var/www/html/bms/ui/login.bundle.css",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 893,
						"regions":
						{
						},
						"selection":
						[
							[
								893,
								893
							]
						],
						"settings":
						{
							"syntax": "Packages/CSS/CSS.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 488.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 39.0
	},
	"input":
	{
		"height": 68.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.CSS Extended Completions":
	{
		"height": 0.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.unsaved_changes":
	{
		"height": 168.0
	},
	"pinned_build_system": "",
	"project": "acmefg-bms.sublime-project",
	"replace":
	{
		"height": 154.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"ui/login.bundle.css"
			],
			[
				"logincs",
				"ui/login.bundle.css"
			],
			[
				"templtedash",
				"template/dashboard.php"
			],
			[
				"loginbun",
				"ui/login.bundle.css"
			],
			[
				"controllerservi",
				"src/Controller/Servicecalls.php"
			],
			[
				"bundlecss",
				"ui/login.bundle.css"
			],
			[
				"inde",
				"index.php"
			],
			[
				"mapperreque",
				"src/Mapper/Aeroreport/Request.php"
			],
			[
				"menubuild",
				"src/Service/MenuBuilder.php"
			],
			[
				"mappercustomer",
				"src/Mapper/Aeroreport/Customer.php"
			],
			[
				"routeaero",
				"routes/aeroreport.php"
			],
			[
				"aeroreporstock",
				"src/Mapper/Aeroreport/Stock.php"
			],
			[
				"controlaerrepo",
				"src/Controller/Aeroreport.php"
			],
			[
				"headcont",
				"template/head/content.php"
			],
			[
				"controlaerore",
				"src/Controller/Aeroreport.php"
			],
			[
				"route",
				"routes.php"
			],
			[
				"routerepor",
				"routes/aeroreport.php"
			],
			[
				"mapperaeroreporeq",
				"src/Mapper/Aeroreport/Request.php"
			],
			[
				"controlaero",
				"src/Controller/Aeroreport.php"
			],
			[
				"config",
				"config.php"
			],
			[
				"controlleraerore",
				"src/Controller/Aeroreport.php"
			],
			[
				"mappercompan",
				"src/Mapper/Crm/Company.php"
			],
			[
				"controllercompany",
				"src/Controller/Crm/Company.php"
			],
			[
				"controlcontac",
				"src/Controller/Crm/Contact.php"
			],
			[
				"routecrmconta",
				"routes/crm/contact.php"
			],
			[
				"routecrm/",
				"routes/crm/company.php"
			],
			[
				"routecrm",
				"routes/crm.php"
			],
			[
				"routeinsta",
				"routes/install.php"
			],
			[
				"routes",
				"routes.php"
			],
			[
				"serviceuerac",
				"src/Service/UserAction.php"
			],
			[
				"repouserac",
				"src/Repository/UserAction.php"
			],
			[
				"userac",
				"src/Service/UserAction.php"
			],
			[
				"controlleruser",
				"src/Controller/User.php"
			],
			[
				"routeadmin",
				"routes/admin.php"
			],
			[
				"serviceuseract",
				"src/Service/UserAction.php"
			],
			[
				"serviceuserac",
				"src/Service/UserAction.php"
			],
			[
				"servuerac",
				"src/Service/UserAction.php"
			],
			[
				"controluser",
				"src/Controller/User.php"
			],
			[
				"appdashboa",
				"template/appraisal/dashboard.php"
			],
			[
				"controlapprai",
				"src/Controller/Appraisal.php"
			],
			[
				"rotue",
				"routes.php"
			],
			[
				"controladminuser",
				"src/Controller/Admin/User.php"
			],
			[
				"repousermet",
				"src/Repository/UserMeta.php"
			],
			[
				"middlepermiss",
				"src/Middleware/UserPermission.php"
			],
			[
				"auth",
				"src/Middleware/Auth.php"
			],
			[
				"mapperaerorepor",
				"src/Mapper/Aeroreport/Request.php"
			],
			[
				"confremte",
				"config-remote.php"
			],
			[
				"servidefi",
				"sql/servicecalls/definition.sql"
			],
			[
				"controlservi",
				"src/Controller/Servicecalls.php"
			],
			[
				"routeins",
				"routes/install.php"
			],
			[
				"mapperappsat",
				"src/Mapper/Appraisal/AppStatus.php"
			],
			[
				"mapperapps",
				"src/AbstractMapperAppraisal.php"
			],
			[
				"sqlapprde",
				"sql/appraisal/definition.sql"
			],
			[
				"controladmin",
				"src/Controller/Admin.php"
			],
			[
				"routeinst",
				"routes/install.php"
			],
			[
				"controllerapprai",
				"src/Controller/Appraisal.php"
			],
			[
				"control",
				"src/Controller.php"
			],
			[
				"controlcrm",
				"src/Controller/Crm.php"
			],
			[
				"middlecomm",
				"src/Middleware/Common.php"
			],
			[
				"menubui",
				"src/Service/MenuBuilder.php"
			],
			[
				"confi",
				"config.php"
			],
			[
				"configremo",
				"config-remote.php"
			],
			[
				"error",
				"src/Controller/Error.php"
			],
			[
				"middlecom",
				"src/Middleware/Common.php"
			],
			[
				"routes.",
				"routes.php"
			],
			[
				"middleauth",
				"src/Middleware/Auth.php"
			],
			[
				"controller.",
				"src/Controller.php"
			],
			[
				"routes.ph",
				"routes.php"
			],
			[
				"routes.php",
				"routes.php"
			],
			[
				"kerne",
				"vendor/mwyatt/core/src/Http/Kernel.php"
			],
			[
				"modeluser",
				"src/Model/User.php"
			],
			[
				"midleauth",
				"src/Middleware/Auth.php"
			],
			[
				"inst",
				"routes/install.php"
			],
			[
				"middleauthtest",
				"src/Middleware/AuthTesting.php"
			],
			[
				"confremo",
				"config-remote.php"
			],
			[
				"gitig",
				".gitignore"
			],
			[
				"appraidefi",
				"sql/appraisal/definition.sql"
			],
			[
				"confrep",
				"config-remote.php"
			],
			[
				"json/",
				"json/countries.json"
			],
			[
				"install",
				"routes/install.php"
			],
			[
				"pack",
				"package.json"
			],
			[
				"gulp",
				"gulpfile.js"
			],
			[
				"dashb",
				"template/dashboard.php"
			],
			[
				"shared",
				"template/dashboard-shared.php"
			],
			[
				"contro",
				"src/Controller.php"
			],
			[
				"servi",
				"services.php"
			],
			[
				"serviappst",
				"src/Service/Appraisal/AppStatus.php"
			],
			[
				"routeapri",
				"routes/appraisal.php"
			],
			[
				"mapperenqui",
				"src/Mapper/Crm/Enquiry.php"
			],
			[
				"mapperlead",
				"src/Mapper/Crm/Lead.php"
			],
			[
				"repoenq",
				"src/Repository/Crm/Enquiry.php"
			],
			[
				"crmenquir",
				"routes/crm/enquiry.php"
			],
			[
				"servirepor",
				"src/Service/Report.php"
			],
			[
				"controlenqui",
				"src/Controller/Crm/Enquiry.php"
			],
			[
				"company",
				"template/crm/company.php"
			],
			[
				"enquir",
				"template/crm/enquiry.php"
			],
			[
				"creabundl",
				"ui/crm/enquiry/create.bundle.js"
			],
			[
				"modelenqui",
				"src/Model/Crm/Enquiry.php"
			],
			[
				"servrepor",
				"src/Service/Report.php"
			],
			[
				"controlenquir",
				"src/Controller/Crm/Enquiry.php"
			],
			[
				"cotnacedit",
				"template/crm/contact/edit.php"
			],
			[
				"companedit",
				"template/crm/company/edit.php"
			],
			[
				"controlenq",
				"src/Controller/Crm/Enquiry.php"
			],
			[
				"typeahein",
				"ui/crm/typeahead-input.js"
			],
			[
				"routecontac",
				"routes/crm/contact.php"
			],
			[
				"crmcombund",
				"ui/crm/common.bundle.js"
			],
			[
				"typeinpu",
				"ui/crm/typeahead-input.js"
			],
			[
				"enqcreate",
				"template/crm/enquiry/create.php"
			],
			[
				"notepa",
				"template/crm/notes-panel.php"
			],
			[
				"contac",
				"template/crm/contact.php"
			],
			[
				"controllerconta",
				"src/Controller/Crm/Contact.php"
			],
			[
				"controlcompan",
				"src/Controller/Crm/Company.php"
			],
			[
				"conta",
				"template/crm/contact.php"
			],
			[
				"controllerenq",
				"src/Controller/Crm/Enquiry.php"
			],
			[
				"creaenq",
				"template/crm/contact/create-enquiry.php"
			],
			[
				"controllercontact",
				"src/Controller/Crm/Contact.php"
			],
			[
				"enqcrea",
				"template/crm/enquiry/create.php"
			],
			[
				"controlconta",
				"src/Controller/Crm/Contact.php"
			],
			[
				"absmapper",
				"src/AbstractMapper.php"
			],
			[
				"servicerepor",
				"src/Service/Report.php"
			],
			[
				"compan",
				"template/crm/company.php"
			],
			[
				"mapperconta",
				"src/Mapper/Crm/Contact.php"
			],
			[
				"routecompan",
				"routes/crm/company.php"
			],
			[
				"routecompa",
				"routes/crm/company.php"
			],
			[
				"routeconta",
				"routes/crm/contact.php"
			],
			[
				"crmdefi",
				"sql/crm/definition.sql"
			],
			[
				"modelconta",
				"src/Model/Crm/Contact.php"
			],
			[
				"modelcom",
				"src/Model/Crm/Company.php"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"core",
				"/var/www/html/dotfiles/sublime-text-workspaces/core.sublime-workspace"
			],
			[
				"",
				"/var/www/html/dotfiles/sublime-text-workspaces/acmefg-aeromarkreports.sublime-project"
			],
			[
				"aero",
				"/var/www/html/dotfiles/sublime-text-workspaces/acmefg-aeromarkreports.sublime-project"
			],
			[
				"aerorepo",
				"/var/www/html/dotfiles/sublime-text-workspaces/acmefg-aeromarkreports.sublime-project"
			],
			[
				"e",
				"/var/www/html/dotfiles/sublime-text-workspaces/elttl.sublime-workspace"
			],
			[
				"el",
				"/var/www/html/dotfiles/sublime-text-workspaces/elttl.sublime-workspace"
			],
			[
				"bms",
				"/var/www/html/dotfiles/sublime-text-workspaces/acmefg-bms.sublime-project"
			],
			[
				"pe",
				"/var/www/html/dotfiles/sublime-text-workspaces/acmefg-pentlandwholesale.sublime-project"
			],
			[
				"pentlnd",
				"/var/www/html/dotfiles/sublime-text-workspaces/acmefg-pentlandwholesale.sublime-project"
			],
			[
				"pent",
				"/var/www/html/dotfiles/sublime-text-workspaces/acmefg-pentlandwholesale.sublime-project"
			],
			[
				"pentl",
				"/var/www/html/dotfiles/sublime-text-workspaces/acmefg-pentlandwholesale.sublime-project"
			],
			[
				"cor",
				"/var/www/html/dotfiles/sublime-text-workspaces/core.sublime-workspace"
			],
			[
				"bm",
				"/var/www/html/dotfiles/sublime-text-workspaces/acmefg-bms.sublime-project"
			],
			[
				"acmbm",
				"/var/www/html/dotfiles/sublime-text-workspaces/acmefg-bms.sublime-project"
			],
			[
				"pentla",
				"/var/www/html/dotfiles/sublime-text-workspaces/acmefg-pentlandwholesale.sublime-project"
			],
			[
				"crm",
				"/var/www/html/dotfiles/sublime-text-workspaces/acmefg-crm.sublime-project"
			],
			[
				"close",
				"/var/www/html/dotfiles/sublime-text-workspaces/core.sublime-workspace"
			],
			[
				"elt",
				"/var/www/html/dotfiles/sublime-text-workspaces/elttl.sublime-workspace"
			],
			[
				"serv",
				"/var/www/html/dotfiles/sublime-text-workspaces/acmefg-servicecalls.sublime-project"
			],
			[
				"appri",
				"/var/www/html/dotfiles/sublime-text-workspaces/appraisal.sublime-workspace"
			],
			[
				"apprai",
				"/var/www/html/dotfiles/sublime-text-workspaces/appraisal.sublime-workspace"
			],
			[
				"appr",
				"/var/www/html/dotfiles/sublime-text-workspaces/appraisal.sublime-workspace"
			],
			[
				"servi",
				"/var/www/html/dotfiles/sublime-text-workspaces/acmefg-servicecalls.sublime-project"
			],
			[
				"acmeacme",
				"/var/www/html/dotfiles/sublime-text-workspaces/acmefg-acmefg.sublime-project"
			],
			[
				"ser",
				"/var/www/html/dotfiles/sublime-text-workspaces/acmefg-servicecalls.sublime-project"
			],
			[
				"apri",
				"/var/www/html/dotfiles/sublime-text-workspaces/appraisal.sublime-workspace"
			],
			[
				"vans",
				"/var/www/html/dotfiles/sublime-text-workspaces/pentland-vanstox.sublime-project"
			],
			[
				"acmefgac",
				"/var/www/html/dotfiles/sublime-text-workspaces/acmefg-acmefg.sublime-project"
			],
			[
				"a",
				"/var/www/html/dotfiles/sublime-text-workspaces/appraisal.sublime-workspace"
			],
			[
				"apr",
				"/var/www/html/dotfiles/sublime-text-workspaces/acmefg-bms.sublime-project"
			],
			[
				"co",
				"/var/www/html/dotfiles/sublime-text-workspaces/codex.sublime-workspace"
			],
			[
				"coreui",
				"/var/www/html/dotfiles/sublime-text-workspaces/acmefg-coreui.sublime-project"
			],
			[
				"corre",
				"/var/www/html/dotfiles/sublime-text-workspaces/core.sublime-workspace"
			],
			[
				"nav",
				"/var/www/html/dotfiles/sublime-text-workspaces/pentland-navreports.sublime-project"
			],
			[
				"aeror",
				"/var/www/html/dotfiles/sublime-text-workspaces/acmefg-aeromarkreports.sublime-project"
			],
			[
				"appria",
				"/var/www/html/dotfiles/sublime-text-workspaces/appraisal.sublime-workspace"
			],
			[
				"app",
				"/var/www/html/dotfiles/sublime-text-workspaces/appraisal.sublime-workspace"
			],
			[
				"appra",
				"/var/www/html/dotfiles/sublime-text-workspaces/appraisal.sublime-workspace"
			],
			[
				"brand",
				"/var/www/html/dotfiles/sublime-text-workspaces/acmefg-brand-guidelines.sublime-project"
			],
			[
				"cod",
				"/var/www/html/dotfiles/sublime-text-workspaces/codex.sublime-workspace"
			],
			[
				"bran",
				"/var/www/html/dotfiles/sublime-text-workspaces/acmefg-brand-guidelines.sublime-project"
			],
			[
				"code",
				"/var/www/html/dotfiles/sublime-text-workspaces/codex.sublime-workspace"
			],
			[
				"codex",
				"/var/www/html/dotfiles/sublime-text-workspaces/codex.sublime-workspace"
			],
			[
				"un",
				"/var/www/html/untitled.sublime-project"
			],
			[
				"servca",
				"/var/www/html/dotfiles/sublime-text-workspaces/acmefg-servicecalls.sublime-project"
			],
			[
				"intra",
				"/var/www/html/dotfiles/sublime-text-workspaces/acmefg-intranet.sublime-workspace"
			],
			[
				"acmefg-",
				"/var/www/html/dotfiles/sublime-text-workspaces/acmefg-aeromarkreports.sublime-project"
			],
			[
				"acmebra",
				"/var/www/html/dotfiles/sublime-text-workspaces/acmefg-brand-guidelines.sublime-project"
			],
			[
				"dia",
				"/var/www/html/dotfiles/sublime-text-workspaces/dialogue.sublime-workspace"
			],
			[
				"store",
				"/var/www/html/dotfiles/sublime-text-workspaces/store.sublime-workspace"
			],
			[
				"s",
				"/var/www/html/dotfiles/sublime-text-workspaces/store.sublime-workspace"
			],
			[
				"stor",
				"/var/www/html/dotfiles/sublime-text-workspaces/store.sublime-workspace"
			],
			[
				"sto",
				"/var/www/html/dotfiles/sublime-text-workspaces/store.sublime-workspace"
			],
			[
				"stoe",
				"/var/www/html/dotfiles/sublime-text-workspaces/store.sublime-workspace"
			],
			[
				"sand",
				"/var/www/html/dotfiles/sublime-text-workspaces/sandbox.sublime-workspace"
			],
			[
				"stot",
				"/var/www/html/dotfiles/sublime-text-workspaces/store.sublime-workspace"
			],
			[
				"port",
				"/var/www/html/setting/sublime-text-workspaces/portfolio.sublime-workspace"
			],
			[
				"sote",
				"/var/www/html/setting/sublime-text-workspaces/store.sublime-workspace"
			],
			[
				"pos",
				"/var/www/html/setting/sublime-text-workspaces/possession.sublime-project"
			],
			[
				"por",
				"/var/www/html/setting/sublime-text-workspaces/portfolio.sublime-workspace"
			],
			[
				"st",
				"/var/www/html/setting/sublime-text-workspaces/store.sublime-workspace"
			],
			[
				"eltt",
				"/var/www/html/setting/sublime-text-workspaces/elttl.sublime-workspace"
			],
			[
				"claire",
				"/var/www/html/setting/sublime-text-workspaces/claire.sublime-workspace"
			],
			[
				"file",
				"/var/www/html/setting/sublime-text-workspaces/file-browser.sublime-workspace"
			],
			[
				"inv",
				"/var/www/html/setting/sublime-text-workspaces/inventory.sublime-workspace"
			],
			[
				"url",
				"/var/www/html/setting/sublime-text-workspaces/url.sublime-workspace"
			],
			[
				"grid",
				"/var/www/html/sublime-workspace/grid.sublime-workspace"
			],
			[
				"dialo",
				"/var/www/html/sublime-workspace/dialogue.sublime-workspace"
			],
			[
				"gri",
				"/var/www/html/sublime-workspace/grid.sublime-workspace"
			],
			[
				"diao",
				"/var/www/html/sublime-workspace/dialogue.sublime-workspace"
			],
			[
				"dial",
				"/var/www/html/sublime-workspace/dialogue.sublime-workspace"
			],
			[
				"diua",
				"/var/www/html/sublime-workspace/dialogue.sublime-workspace"
			],
			[
				"g",
				"/var/www/html/grid/grid.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": false,
	"side_bar_visible": false,
	"side_bar_width": 253.0,
	"status_bar_visible": false,
	"template_settings":
	{
	}
}
